name: Fitbit Workflow

on:
  push:
  schedule:
    - cron: '0 */4 * * *'

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create environment file
      run: |
        cat << EOF > .env
        # Fitbit environment variables
        FITBIT_AUTH_URI=${{ vars.FITBIT_AUTH_URI }}
        FITBIT_EXPIRES_AT=${{ vars.FITBIT_EXPIRES_AT }}
        FITBIT_REDIRECT_URI=${{ vars.FITBIT_REDIRECT_URI }}
        FITBIT_TOKEN_REQUEST_URI=${{ vars.FITBIT_TOKEN_REQUEST_URI }}
        # Fitbit secrets
        FITBIT_ACCESS_TOKEN=${{ secrets.FITBIT_ACCESS_TOKEN }}
        FITBIT_CLIENT_ID=${{ secrets.FITBIT_CLIENT_ID }}
        FITBIT_CLIENT_SECRET=${{ secrets.FITBIT_CLIENT_SECRET }}
        FITBIT_REFRESH_TOKEN=${{ secrets.FITBIT_REFRESH_TOKEN }}
        EOF

    - name: Get most recent successful run
      id: get-successful-run
      uses: actions/github-script@v7  
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data } = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'main.yaml',
            status: 'completed',
          });

          const successfulRun = data.workflow_runs.find(run => run.conclusion === 'success');

          if (!successfulRun) {
            return { runId: null, found: false };
          }

          return { runId: successfulRun.id, found: true };

    - name: Download Fitbit Tokens from GitHub Artifacts
      uses: actions/download-artifact@v4
      with:
        name: fitbit-tokens
        run-id: ${{ steps.get-successful-run.outputs.runId }}
      if: steps.get-successful-run.outputs.found == 'true'
      continue-on-error: true

    - name: Echo Workflow Run Information
      run: |
        echo "Current Workflow Run ID: $GITHUB_RUN_ID"
        echo "Attempting to download artifact from Run ID: ${{ steps.get-successful-run.outputs.runId }}"

    - name: Check download status and notify if failed
      if: failure() && steps.get-successful-run.outputs.found == 'true' # This step runs if the download step failed
      run: |
        echo "Artifact download failed."

    - name: Update .env file with latest token data
      run: |
        if [ -f fitbit_tokens.json ]; then
          FITBIT_ACCESS_TOKEN=$(jq -r '.FITBIT_ACCESS_TOKEN' fitbit_tokens.json)
          FITBIT_REFRESH_TOKEN=$(jq -r '.FITBIT_REFRESH_TOKEN' fitbit_tokens.json)
          FITBIT_EXPIRES_AT=$(jq -r '.FITBIT_EXPIRES_AT' fitbit_tokens.json)

          echo "FITBIT_ACCESS_TOKEN=$FITBIT_ACCESS_TOKEN" >> .env
          echo "FITBIT_REFRESH_TOKEN=$FITBIT_REFRESH_TOKEN" >> .env
          echo "FITBIT_EXPIRES_AT=$FITBIT_EXPIRES_AT" >> .env
        else
          echo "fitbit_tokens.json not found, skipping .env update."
        fi

    - name: Build Docker image
      run: docker build -t fitbit-app .

    - name: Run Fitbit Tokens command
      run: docker run --env-file .env -v ${{ github.workspace }}:/app fitbit-app python fitbit.py fitbit-tokens

    - name: Update README
      run: |
        FITBIT_STEPS=$(docker run --env-file .env -v ${{ github.workspace }}:/app fitbit-app python fitbit.py fitbit-steps | tr -d '\n')
        FITBIT_SLEEP=$(docker run --env-file .env -v ${{ github.workspace }}:/app fitbit-app python fitbit.py fitbit-sleep | tr -d '\n')
        sed -i "s/^- <samp> üö∂üèº‚Äç‚ôÇÔ∏è Today I have walked .* steps and slept for .* <\/samp><br>$/- <samp> üö∂üèº‚Äç‚ôÇÔ∏è Today I have walked **$FITBIT_STEPS** steps and slept for **$FITBIT_SLEEP** <\/samp><br>/" README.md
        echo "Steps: $FITBIT_STEPS"
        echo "Sleep: $FITBIT_SLEEP"

    - name: Display README.md contents
      run: cat README.md

    - name: Commit and push changes
      run: |
        git config --global user.name 'o6uoq'
        git config --global user.email 'david@git.id.au'
        git add README.md
        git commit -am "[gh-action] Update README with Fitbit data" || echo "No changes to commit"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Fitbit Tokens to GitHub Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: fitbit-tokens
        path: fitbit_tokens.json
